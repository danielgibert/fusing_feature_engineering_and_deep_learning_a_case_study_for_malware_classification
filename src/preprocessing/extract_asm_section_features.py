import os
import csv
import argparse
from pe_parser.asm_parser import AssemblyParser


if __name__ == "__main__":
    parser = argparse.ArgumentParser()
    parser.add_argument('--train', dest='train', action='store_true')
    parser.add_argument('--no-train', dest='train', action='store_false')
    parser.set_defaults(train=True)
    args = parser.parse_args()

    if args.train is True:
        pe_filepath = "/mnt/hdd1/cerberus_mlw_data/asm/raw/train/"
        output_filepath = "../../data/feature_files/train/asm_section_features.csv"
    else:
        pe_filepath = "/mnt/hdd1/cerberus_mlw_data/asm/raw/test/"
        output_filepath = "../../data/feature_files/test/asm_section_features.csv"

    fieldnames = ['Id', 'ASM_SECTION_.text', 'ASM_SECTION_.data', 'ASM_SECTION_.bss', 'ASM_SECTION_.rdata',
                  'ASM_SECTION_.edata', 'ASM_SECTION_.idata', 'ASM_SECTION_.rsrc', 'ASM_SECTION_.tls',
                  'ASM_SECTION_.reloc', 'ASM_SECTION_Num_Sections', 'ASM_SECTION_Unknown_Sections',
                  'ASM_SECTION_Unknown_Sections_lines', 'ASM_SECTION_.text_por', 'ASM_SECTION_.data_por',
                  'ASM_SECTION_.bss_por', 'ASM_SECTION_.rdata_por', 'ASM_SECTION_.edata_por', 'ASM_SECTION_.idata_por',
                  'ASM_SECTION_.rsrc_por', 'ASM_SECTION_.tls_por', 'ASM_SECTION_.reloc_por',
                  'ASM_SECTION_known_Sections_por', 'ASM_SECTION_Unknown_Sections_por',
                  'ASM_SECTION_Unknown_Sections_lines_por']

    with open(output_filepath, "w") as output_file:
        writer = csv.DictWriter(output_file, fieldnames=fieldnames)
        writer.writeheader()
        i = 0
        filenames = os.listdir(pe_filepath)
        for filename in filenames:
            asm_parser = AssemblyParser()
            print("{};{}".format(i,pe_filepath+filename))
            asm_parser.load_asm_file(pe_filepath+filename)
            section_features = asm_parser.extract_section_features()
            section_features['Id'] = filename[:-4]
            writer.writerow({feature_name: section_features[feature_name] for feature_name in fieldnames})
            i+=1