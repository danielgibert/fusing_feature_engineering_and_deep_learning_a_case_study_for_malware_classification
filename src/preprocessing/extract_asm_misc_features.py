import os
import csv
import argparse
from pe_parser.asm_parser import AssemblyParser


if __name__ == "__main__":
    parser = argparse.ArgumentParser()
    parser.add_argument('--train', dest='train', action='store_true')
    parser.add_argument('--no-train', dest='train', action='store_false')
    parser.set_defaults(train=True)
    args = parser.parse_args()

    if args.train is True:
        pe_filepath = "/mnt/hdd1/cerberus_mlw_data/asm/raw/train/"
        output_filepath = "../../data/feature_files/train/asm_misc_features.csv"
    else:
        pe_filepath = "/mnt/hdd1/cerberus_mlw_data/asm/raw/test/"
        output_filepath = "../../data/feature_files/test/asm_misc_features.csv"

    fieldnames = ['Id', 'ASM_MISC_Virtual', 'ASM_MISC_Offset', 'ASM_MISC_loc', 'ASM_MISC_Import', 'ASM_MISC_Imports',
                  'ASM_MISC_var', 'ASM_MISC_Forwarder', 'ASM_MISC_UINT', 'ASM_MISC_LONG', 'ASM_MISC_BOOL',
                  'ASM_MISC_WORD', 'ASM_MISC_BYTES', 'ASM_MISC_large', 'ASM_MISC_short', 'ASM_MISC_dd', 'ASM_MISC_db',
                  'ASM_MISC_dw', 'ASM_MISC_XREF', 'ASM_MISC_ptr', 'ASM_MISC_DATA', 'ASM_MISC_FUNCTION',
                  'ASM_MISC_extrn', 'ASM_MISC_byte', 'ASM_MISC_word', 'ASM_MISC_dword', 'ASM_MISC_char',
                  'ASM_MISC_DWORD', 'ASM_MISC_stdcall', 'ASM_MISC_arg', 'ASM_MISC_locret', 'ASM_MISC_asc',
                  'ASM_MISC_align', 'ASM_MISC_WinMain', 'ASM_MISC_unk', 'ASM_MISC_cookie', 'ASM_MISC_off',
                  'ASM_MISC_nullsub', 'ASM_MISC_DllEntryPoint', 'ASM_MISC_System32', 'ASM_MISC_dll', 'ASM_MISC_CHUNK',
                  'ASM_MISC_BASS', 'ASM_MISC_HMENU', 'ASM_MISC_DLL', 'ASM_MISC_LPWSTR', 'ASM_MISC_void',
                  'ASM_MISC_HRESULT', 'ASM_MISC_HDC', 'ASM_MISC_LRESULT', 'ASM_MISC_HANDLE', 'ASM_MISC_HWND',
                  'ASM_MISC_LPSTR', 'ASM_MISC_int', 'ASM_MISC_HLOCAL', 'ASM_MISC_FARPROC', 'ASM_MISC_ATOM',
                  'ASM_MISC_HMODULE', 'ASM_MISC_WPARAM', 'ASM_MISC_HGLOBAL', 'ASM_MISC_entry', 'ASM_MISC_rva',
                  'ASM_MISC_COLLAPSED', 'ASM_MISC_config', 'ASM_MISC_exe', 'ASM_MISC_Software',
                  'ASM_MISC_CurrentVersion', 'ASM_MISC___imp_', 'ASM_MISC_INT_PTR', 'ASM_MISC_UINT_PTR',
                  'ASM_MISC_---Seperator', 'ASM_MISC_PCCTL_CONTEXT', 'ASM_MISC___IMPORT_',
                  'ASM_MISC_INTERNET_STATUS_CALLBACK', 'ASM_MISC_.rdata:', 'ASM_MISC_.data:', 'ASM_MISC_.text:',
                  'ASM_MISC_case', 'ASM_MISC_installdir', 'ASM_MISC_market', 'ASM_MISC_microsoft', 'ASM_MISC_policies',
                  'ASM_MISC_proc', 'ASM_MISC_scrollwindow', 'ASM_MISC_search', 'ASM_MISC_trap', 'ASM_MISC_visualc',
                  'ASM_MISC____security_cookie', 'ASM_MISC_assume', 'ASM_MISC_callvirtualalloc',
                  'ASM_MISC_exportedentry', 'ASM_MISC_hardware', 'ASM_MISC_hkey_current_user',
                  'ASM_MISC_hkey_local_machine', 'ASM_MISC_sp-analysisfailed', 'ASM_MISC_unableto']


    with open(output_filepath, "w") as output_file:
        writer = csv.DictWriter(output_file, fieldnames=fieldnames)
        writer.writeheader()
        i = 0
        filenames = os.listdir(pe_filepath)
        for filename in filenames:
            asm_parser = AssemblyParser()
            print("{};{}".format(i,pe_filepath+filename))
            asm_parser.load_asm_file(pe_filepath+filename)
            misc_features = asm_parser.extract_MISC_features()
            misc_features['Id'] = filename[:-4]
            writer.writerow({feature_name: misc_features[feature_name] for feature_name in fieldnames})
            i+=1